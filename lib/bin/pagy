#!/usr/bin/env ruby
# frozen_string_literal: true

def path(app)
  File.expand_path("../apps/#{app}.ru", __dir__)
end

arg = ARGV.shift
case arg

when nil
  puts <<~HELP

    Pagy utility to run, create and develop pagy demo apps

    USAGE
      pagy [demo|repro|**/*.ru] [\\d+|8000]
                    Run an app on port (default 8000)
      pagy new [demo|repro]
                    Create a demo or repro app

    EXAMPLES
      pagy          Print this message
      pagy demo     Run the demo app on port 8000
      pagy repro    Run the repro app on port 8000
      pagy new repro
                    Create a new repro app at ./repro.ru
      pagy ~/my-repro.ru 8001
                    Run your app at http://0.0.0.0:8001
  HELP

when 'new'
  app = ARGV.shift
  case app
  when nil
    warn 'Missing argument: demo|repro'
    exit 1

  when 'demo', 'repro'
    path = path(app)
    name = File.basename(path)
    if File.exist?(name)
      print "Do you want to overwrite the '#{name}' file? (y/n)> "
      answer = gets.chomp
      exit unless answer.start_with?(/y/i)
    end

    require 'fileutils'
    FileUtils.cp(path, '.', verbose: true)
  else
    warn "Unknown app: '#{app}'"
    exit 2
  end

else
  path = arg.eql?('demo') || arg.eql?('repro') ? path(arg) : arg
  unless File.exist?(path)
    warn "App '#{path}' not found"
    exit 3
  end
  require 'bundler/inline'
  gemfile true do
    source 'https://rubygems.org'
    gem 'rackup'
    gem 'rerun'
  end
  port   = ARGV.shift || 8000
  rackup = "rackup -I #{File.expand_path('../..', __FILE__)} -r pagy -o 0.0.0.0 -p #{port}"
  exec "rerun -d #{File.dirname(path)} -p #{File.basename(path)} -- #{rackup} #{path}"
end
